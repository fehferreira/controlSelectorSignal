;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 02/07/2020 14:38:33
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF002EF76  	GOTO        1260
_interrupt:
;choose_signal.c,103 :: 		void interrupt()
0x0008	0xF016C000  	MOVFF       R0, 22
0x000C	0xF015C001  	MOVFF       R1, 21
;choose_signal.c,106 :: 		if(TMR0IF_bit)
0x0010	0xA4F2      	BTFSS       TMR0IF_bit, BitPos(TMR0IF_bit+0) 
0x0012	0xD007      	BRA         L_interrupt2
;choose_signal.c,108 :: 		TMR0IF_bit = 0x00;                       //Limpa a flag de interrupção
0x0014	0x94F2      	BCF         TMR0IF_bit, BitPos(TMR0IF_bit+0) 
;choose_signal.c,109 :: 		TMR0H = 0xB1;                            //Reiniciando os contadores (45536)
0x0016	0x0EB1      	MOVLW       177
0x0018	0x6ED7      	MOVWF       TMR0H 
;choose_signal.c,110 :: 		TMR0L = 0xE0;                            //Reiniciando os contadores (45536)
0x001A	0x0EE0      	MOVLW       224
0x001C	0x6ED6      	MOVWF       TMR0L 
;choose_signal.c,111 :: 		out_signal = ~out_signal;
0x001E	0x7083      	BTG         RD0_bit, BitPos(RD0_bit+0) 
;choose_signal.c,113 :: 		teste_button();
0x0020	0xD9A0      	RCALL       _teste_button
;choose_signal.c,115 :: 		}
L_interrupt2:
;choose_signal.c,117 :: 		}
L_end_interrupt:
L__interrupt27:
0x0022	0xF000C016  	MOVFF       22, R0
0x0026	0xF001C015  	MOVFF       21, R1
0x002A	0x0011      	RETFIE      1
; end of _interrupt
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x002C	0x0000      	NOP
0x002E	0x0000      	NOP
0x0030	0x0000      	NOP
0x0032	0x0000      	NOP
0x0034	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x0036	0x0012      	RETURN      0
; end of _Delay_1us
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x0038	0x0E24      	MOVLW       36
0x003A	0x6E0C      	MOVWF       R12, 0
0x003C	0x0EB5      	MOVLW       181
0x003E	0x6E0D      	MOVWF       R13, 0
L_Delay_5500us5:
0x0040	0x2E0D      	DECFSZ      R13, 1, 0
0x0042	0xD7FE      	BRA         L_Delay_5500us5
0x0044	0x2E0C      	DECFSZ      R12, 1, 0
0x0046	0xD7FC      	BRA         L_Delay_5500us5
0x0048	0x0000      	NOP
0x004A	0x0000      	NOP
;__Lib_Delays.c,33 :: 		}
L_end_Delay_5500us:
0x004C	0x0012      	RETURN      0
; end of _Delay_5500us
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x004E	0x0E53      	MOVLW       83
0x0050	0x6E0D      	MOVWF       R13, 0
L_Delay_50us2:
0x0052	0x2E0D      	DECFSZ      R13, 1, 0
0x0054	0xD7FE      	BRA         L_Delay_50us2
;__Lib_Delays.c,21 :: 		}
L_end_Delay_50us:
0x0056	0x0012      	RETURN      0
; end of _Delay_50us
_Div_16X16_U:
;__Lib_Math.c,102 :: 		
;__Lib_Math.c,109 :: 		
0x0058	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,110 :: 		
0x005A	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,111 :: 		
0x005C	0x0E10      	MOVLW       16
;__Lib_Math.c,112 :: 		
0x005E	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,113 :: 		
0x0060	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,114 :: 		
0x0062	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,115 :: 		
0x0064	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,116 :: 		
0x0066	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,117 :: 		
0x0068	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,118 :: 		
0x006A	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,119 :: 		
0x006C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,120 :: 		
0x006E	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,121 :: 		
0x0070	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,122 :: 		
0x0072	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,123 :: 		
0x0074	0xD007      	BRA         $+16
;__Lib_Math.c,124 :: 		
0x0076	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,125 :: 		
0x0078	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,126 :: 		
0x007A	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,127 :: 		
0x007C	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,128 :: 		
0x007E	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,129 :: 		
0x0080	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,130 :: 		
0x0082	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,131 :: 		
0x0084	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,132 :: 		
0x0086	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,133 :: 		
0x0088	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,134 :: 		
0x008A	0xD7EA      	BRA         $-42
;__Lib_Math.c,136 :: 		
L_end_Div_16X16_U:
0x008C	0x0012      	RETURN      0
; end of _Div_16X16_U
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x008E	0xBE34      	BTFSC       FARG_Lcd_Cmd_out_char, 7 
0x0090	0xD002      	BRA         L__Lcd_Cmd21
0x0092	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x0094	0xD001      	BRA         L__Lcd_Cmd22
L__Lcd_Cmd21:
0x0096	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd22:
;__Lib_Lcd.c,21 :: 		
0x0098	0xBC34      	BTFSC       FARG_Lcd_Cmd_out_char, 6 
0x009A	0xD002      	BRA         L__Lcd_Cmd23
0x009C	0x9C83      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x009E	0xD001      	BRA         L__Lcd_Cmd24
L__Lcd_Cmd23:
0x00A0	0x8C83      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd24:
;__Lib_Lcd.c,22 :: 		
0x00A2	0xBA34      	BTFSC       FARG_Lcd_Cmd_out_char, 5 
0x00A4	0xD002      	BRA         L__Lcd_Cmd25
0x00A6	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x00A8	0xD001      	BRA         L__Lcd_Cmd26
L__Lcd_Cmd25:
0x00AA	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd26:
;__Lib_Lcd.c,23 :: 		
0x00AC	0xB834      	BTFSC       FARG_Lcd_Cmd_out_char, 4 
0x00AE	0xD002      	BRA         L__Lcd_Cmd27
0x00B0	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x00B2	0xD001      	BRA         L__Lcd_Cmd28
L__Lcd_Cmd27:
0x00B4	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd28:
;__Lib_Lcd.c,25 :: 		
0x00B6	0xB419      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x00B8	0xD002      	BRA         L__Lcd_Cmd29
0x00BA	0x8483      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x00BC	0xD001      	BRA         L__Lcd_Cmd30
L__Lcd_Cmd29:
0x00BE	0x9483      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd30:
;__Lib_Lcd.c,28 :: 		
0x00C0	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,29 :: 		
0x00C2	0xDFB4      	RCALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x00C4	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,33 :: 		
0x00C6	0xB634      	BTFSC       FARG_Lcd_Cmd_out_char, 3 
0x00C8	0xD002      	BRA         L__Lcd_Cmd31
0x00CA	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x00CC	0xD001      	BRA         L__Lcd_Cmd32
L__Lcd_Cmd31:
0x00CE	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd32:
;__Lib_Lcd.c,34 :: 		
0x00D0	0xB434      	BTFSC       FARG_Lcd_Cmd_out_char, 2 
0x00D2	0xD002      	BRA         L__Lcd_Cmd33
0x00D4	0x9C83      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x00D6	0xD001      	BRA         L__Lcd_Cmd34
L__Lcd_Cmd33:
0x00D8	0x8C83      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd34:
;__Lib_Lcd.c,35 :: 		
0x00DA	0xB234      	BTFSC       FARG_Lcd_Cmd_out_char, 1 
0x00DC	0xD002      	BRA         L__Lcd_Cmd35
0x00DE	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x00E0	0xD001      	BRA         L__Lcd_Cmd36
L__Lcd_Cmd35:
0x00E2	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd36:
;__Lib_Lcd.c,36 :: 		
0x00E4	0xB034      	BTFSC       FARG_Lcd_Cmd_out_char, 0 
0x00E6	0xD002      	BRA         L__Lcd_Cmd37
0x00E8	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x00EA	0xD001      	BRA         L__Lcd_Cmd38
L__Lcd_Cmd37:
0x00EC	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd38:
;__Lib_Lcd.c,38 :: 		
0x00EE	0xB419      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x00F0	0xD002      	BRA         L__Lcd_Cmd39
0x00F2	0x8483      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x00F4	0xD001      	BRA         L__Lcd_Cmd40
L__Lcd_Cmd39:
0x00F6	0x9483      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd40:
;__Lib_Lcd.c,40 :: 		
0x00F8	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,41 :: 		
0x00FA	0xDF98      	RCALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x00FC	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,44 :: 		
0x00FE	0xA419      	BTFSS       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x0100	0xD002      	BRA         L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x0102	0xDF9A      	RCALL       _Delay_5500us
0x0104	0xD001      	BRA         L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x0106	0xDFA3      	RCALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
L_end_Lcd_Cmd:
0x0108	0x0012      	RETURN      0
; end of _Lcd_Cmd
_WordToStr:
;__Lib_Conversions.c,98 :: 		
;__Lib_Conversions.c,103 :: 		
0x010A	0x6A31      	CLRF        WordToStr_len_L0 
L_WordToStr11:
0x010C	0x0E05      	MOVLW       5
0x010E	0x5C31      	SUBWF       WordToStr_len_L0, 0 
0x0110	0xE20A      	BC          L_WordToStr12
;__Lib_Conversions.c,104 :: 		
0x0112	0x5031      	MOVF        WordToStr_len_L0, 0 
0x0114	0x242F      	ADDWF       FARG_WordToStr_output, 0 
0x0116	0x6EE1      	MOVWF       FSR1L 
0x0118	0x0E00      	MOVLW       0
0x011A	0x2030      	ADDWFC      FARG_WordToStr_output+1, 0 
0x011C	0x6EE2      	MOVWF       FSR1H 
0x011E	0x0E20      	MOVLW       32
0x0120	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,103 :: 		
0x0122	0x2A31      	INCF        WordToStr_len_L0, 1 
;__Lib_Conversions.c,104 :: 		
0x0124	0xD7F3      	BRA         L_WordToStr11
L_WordToStr12:
;__Lib_Conversions.c,105 :: 		
0x0126	0x5031      	MOVF        WordToStr_len_L0, 0 
0x0128	0x242F      	ADDWF       FARG_WordToStr_output, 0 
0x012A	0x6EE1      	MOVWF       FSR1L 
0x012C	0x0E00      	MOVLW       0
0x012E	0x2030      	ADDWFC      FARG_WordToStr_output+1, 0 
0x0130	0x6EE2      	MOVWF       FSR1H 
0x0132	0x6AE6      	CLRF        POSTINC1 
0x0134	0x0631      	DECF        WordToStr_len_L0, 1 
;__Lib_Conversions.c,107 :: 		
L_WordToStr14:
;__Lib_Conversions.c,108 :: 		
0x0136	0x5031      	MOVF        WordToStr_len_L0, 0 
0x0138	0x242F      	ADDWF       FARG_WordToStr_output, 0 
0x013A	0x6E32      	MOVWF       FLOC__WordToStr 
0x013C	0x0E00      	MOVLW       0
0x013E	0x2030      	ADDWFC      FARG_WordToStr_output+1, 0 
0x0140	0x6E33      	MOVWF       FLOC__WordToStr+1 
0x0142	0x0E0A      	MOVLW       10
0x0144	0x6E04      	MOVWF       R4 
0x0146	0x0E00      	MOVLW       0
0x0148	0x6E05      	MOVWF       R5 
0x014A	0xF000C02D  	MOVFF       FARG_WordToStr_input, R0
0x014E	0xF001C02E  	MOVFF       FARG_WordToStr_input+1, R1
0x0152	0xDF82      	RCALL       _Div_16X16_U
0x0154	0xF000C008  	MOVFF       R8, R0
0x0158	0xF001C009  	MOVFF       R9, R1
0x015C	0x0E30      	MOVLW       48
0x015E	0x2600      	ADDWF       R0, 1 
0x0160	0xFFE1C032  	MOVFF       FLOC__WordToStr, FSR1L
0x0164	0xFFE2C033  	MOVFF       FLOC__WordToStr+1, FSR1H
0x0168	0xFFE6C000  	MOVFF       R0, POSTINC1
;__Lib_Conversions.c,109 :: 		
0x016C	0x0E0A      	MOVLW       10
0x016E	0x6E04      	MOVWF       R4 
0x0170	0x0E00      	MOVLW       0
0x0172	0x6E05      	MOVWF       R5 
0x0174	0xF000C02D  	MOVFF       FARG_WordToStr_input, R0
0x0178	0xF001C02E  	MOVFF       FARG_WordToStr_input+1, R1
0x017C	0xDF6D      	RCALL       _Div_16X16_U
0x017E	0xF02DC000  	MOVFF       R0, FARG_WordToStr_input
0x0182	0xF02EC001  	MOVFF       R1, FARG_WordToStr_input+1
;__Lib_Conversions.c,110 :: 		
0x0186	0x0E00      	MOVLW       0
0x0188	0x1801      	XORWF       R1, 0 
0x018A	0xE102      	BNZ         L__WordToStr159
0x018C	0x0E00      	MOVLW       0
0x018E	0x1800      	XORWF       R0, 0 
L__WordToStr159:
0x0190	0xE101      	BNZ         L_WordToStr16
;__Lib_Conversions.c,111 :: 		
0x0192	0xD002      	BRA         L_WordToStr15
L_WordToStr16:
;__Lib_Conversions.c,112 :: 		
0x0194	0x0631      	DECF        WordToStr_len_L0, 1 
;__Lib_Conversions.c,113 :: 		
0x0196	0xD7CF      	BRA         L_WordToStr14
L_WordToStr15:
;__Lib_Conversions.c,114 :: 		
L_end_WordToStr:
0x0198	0x0012      	RETURN      0
; end of _WordToStr
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x019A	0x9419      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,53 :: 		
0x019C	0xF034C02D  	MOVFF       FARG_Lcd_Chr_CP_out_char, FARG_Lcd_Cmd_out_char
0x01A0	0xDF76      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x01A2	0x8419      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,55 :: 		
L_end_Lcd_Chr_CP:
0x01A4	0x0012      	RETURN      0
; end of _Lcd_Chr_CP
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x01A6	0xD00F      	BRA         L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x01A8	0x0E80      	MOVLW       128
0x01AA	0x6E23      	MOVWF       FARG_Lcd_Out_row 
0x01AC	0xD019      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x01AE	0x0EC0      	MOVLW       192
0x01B0	0x6E23      	MOVWF       FARG_Lcd_Out_row 
0x01B2	0xD016      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x01B4	0x0E94      	MOVLW       148
0x01B6	0x6E23      	MOVWF       FARG_Lcd_Out_row 
0x01B8	0xD013      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x01BA	0x0ED4      	MOVLW       212
0x01BC	0x6E23      	MOVWF       FARG_Lcd_Out_row 
0x01BE	0xD010      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x01C0	0x0E80      	MOVLW       128
0x01C2	0x6E23      	MOVWF       FARG_Lcd_Out_row 
;__Lib_Lcd.c,193 :: 		
0x01C4	0xD00D      	BRA         L_Lcd_Out12
L_Lcd_Out11:
0x01C6	0x5023      	MOVF        FARG_Lcd_Out_row, 0 
0x01C8	0x0A01      	XORLW       1
0x01CA	0xE0EE      	BZ          L_Lcd_Out13
0x01CC	0x5023      	MOVF        FARG_Lcd_Out_row, 0 
0x01CE	0x0A02      	XORLW       2
0x01D0	0xE0EE      	BZ          L_Lcd_Out14
0x01D2	0x5023      	MOVF        FARG_Lcd_Out_row, 0 
0x01D4	0x0A03      	XORLW       3
0x01D6	0xE0EE      	BZ          L_Lcd_Out15
0x01D8	0x5023      	MOVF        FARG_Lcd_Out_row, 0 
0x01DA	0x0A04      	XORLW       4
0x01DC	0xE0EE      	BZ          L_Lcd_Out16
0x01DE	0xD7F0      	BRA         L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x01E0	0x0424      	DECF        FARG_Lcd_Out_column, 0 
0x01E2	0x6E00      	MOVWF       R0 
0x01E4	0x5023      	MOVF        FARG_Lcd_Out_row, 0 
0x01E6	0x2600      	ADDWF       R0, 1 
0x01E8	0xF023C000  	MOVFF       R0, FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x01EC	0xF034C000  	MOVFF       R0, FARG_Lcd_Cmd_out_char
0x01F0	0xDF4E      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,197 :: 		
0x01F2	0x9419      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,198 :: 		
0x01F4	0x6A27      	CLRF        Lcd_Out_i_L0 
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x01F6	0x5027      	MOVF        Lcd_Out_i_L0, 0 
0x01F8	0x2425      	ADDWF       FARG_Lcd_Out_text, 0 
0x01FA	0x6EE9      	MOVWF       FSR0L 
0x01FC	0x0E00      	MOVLW       0
0x01FE	0x2026      	ADDWFC      FARG_Lcd_Out_text+1, 0 
0x0200	0x6EEA      	MOVWF       FSR0H 
0x0202	0x52EE      	MOVF        POSTINC0, 1 
0x0204	0xE00B      	BZ          L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x0206	0x5027      	MOVF        Lcd_Out_i_L0, 0 
0x0208	0x2425      	ADDWF       FARG_Lcd_Out_text, 0 
0x020A	0x6EE9      	MOVWF       FSR0L 
0x020C	0x0E00      	MOVLW       0
0x020E	0x2026      	ADDWFC      FARG_Lcd_Out_text+1, 0 
0x0210	0x6EEA      	MOVWF       FSR0H 
0x0212	0xF02DCFEE  	MOVFF       POSTINC0, FARG_Lcd_Chr_CP_out_char
0x0216	0xDFC1      	RCALL       _Lcd_Chr_CP
0x0218	0x2A27      	INCF        Lcd_Out_i_L0, 1 
0x021A	0xD7ED      	BRA         L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x021C	0x8419      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,202 :: 		
L_end_Lcd_Out:
0x021E	0x0012      	RETURN      0
; end of _Lcd_Out
_Lcd_Chr:
;__Lib_Lcd.c,65 :: 		
;__Lib_Lcd.c,66 :: 		
0x0220	0xD00F      	BRA         L_Lcd_Chr4
;__Lib_Lcd.c,67 :: 		
L_Lcd_Chr6:
0x0222	0x0E80      	MOVLW       128
0x0224	0x6E23      	MOVWF       FARG_Lcd_Chr_row 
0x0226	0xD019      	BRA         L_Lcd_Chr5
;__Lib_Lcd.c,68 :: 		
L_Lcd_Chr7:
0x0228	0x0EC0      	MOVLW       192
0x022A	0x6E23      	MOVWF       FARG_Lcd_Chr_row 
0x022C	0xD016      	BRA         L_Lcd_Chr5
;__Lib_Lcd.c,69 :: 		
L_Lcd_Chr8:
0x022E	0x0E94      	MOVLW       148
0x0230	0x6E23      	MOVWF       FARG_Lcd_Chr_row 
0x0232	0xD013      	BRA         L_Lcd_Chr5
;__Lib_Lcd.c,70 :: 		
L_Lcd_Chr9:
0x0234	0x0ED4      	MOVLW       212
0x0236	0x6E23      	MOVWF       FARG_Lcd_Chr_row 
0x0238	0xD010      	BRA         L_Lcd_Chr5
;__Lib_Lcd.c,71 :: 		
L_Lcd_Chr10:
0x023A	0x0E80      	MOVLW       128
0x023C	0x6E23      	MOVWF       FARG_Lcd_Chr_row 
;__Lib_Lcd.c,72 :: 		
0x023E	0xD00D      	BRA         L_Lcd_Chr5
L_Lcd_Chr4:
0x0240	0x5023      	MOVF        FARG_Lcd_Chr_row, 0 
0x0242	0x0A01      	XORLW       1
0x0244	0xE0EE      	BZ          L_Lcd_Chr6
0x0246	0x5023      	MOVF        FARG_Lcd_Chr_row, 0 
0x0248	0x0A02      	XORLW       2
0x024A	0xE0EE      	BZ          L_Lcd_Chr7
0x024C	0x5023      	MOVF        FARG_Lcd_Chr_row, 0 
0x024E	0x0A03      	XORLW       3
0x0250	0xE0EE      	BZ          L_Lcd_Chr8
0x0252	0x5023      	MOVF        FARG_Lcd_Chr_row, 0 
0x0254	0x0A04      	XORLW       4
0x0256	0xE0EE      	BZ          L_Lcd_Chr9
0x0258	0xD7F0      	BRA         L_Lcd_Chr10
L_Lcd_Chr5:
;__Lib_Lcd.c,74 :: 		
0x025A	0x0424      	DECF        FARG_Lcd_Chr_column, 0 
0x025C	0x6E00      	MOVWF       R0 
0x025E	0x5023      	MOVF        FARG_Lcd_Chr_row, 0 
0x0260	0x2600      	ADDWF       R0, 1 
0x0262	0xF023C000  	MOVFF       R0, FARG_Lcd_Chr_row
;__Lib_Lcd.c,76 :: 		
0x0266	0x8419      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,77 :: 		
0x0268	0xF034C000  	MOVFF       R0, FARG_Lcd_Cmd_out_char
0x026C	0xDF10      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,79 :: 		
0x026E	0x9419      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,80 :: 		
0x0270	0xF034C025  	MOVFF       FARG_Lcd_Chr_out_char, FARG_Lcd_Cmd_out_char
0x0274	0xDF0C      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,81 :: 		
0x0276	0x8419      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,82 :: 		
L_end_Lcd_Chr:
0x0278	0x0012      	RETURN      0
; end of _Lcd_Chr
_IntToStr:
;__Lib_Conversions.c,195 :: 		
;__Lib_Conversions.c,201 :: 		
0x027A	0x6A29      	CLRF        IntToStr_negative_L0 
0x027C	0x6A2A      	CLRF        IntToStr_negative_L0+1 
;__Lib_Conversions.c,202 :: 		
0x027E	0xF02BC023  	MOVFF       FARG_IntToStr_input, IntToStr_inword_L0
0x0282	0xF02CC024  	MOVFF       FARG_IntToStr_input+1, IntToStr_inword_L0+1
;__Lib_Conversions.c,203 :: 		
0x0286	0x0E80      	MOVLW       128
0x0288	0x1824      	XORWF       FARG_IntToStr_input+1, 0 
0x028A	0x6E00      	MOVWF       R0 
0x028C	0x0E80      	MOVLW       128
0x028E	0x5C00      	SUBWF       R0, 0 
0x0290	0xE102      	BNZ         L__IntToStr167
0x0292	0x0E00      	MOVLW       0
0x0294	0x5C23      	SUBWF       FARG_IntToStr_input, 0 
L__IntToStr167:
0x0296	0xE20B      	BC          L_IntToStr37
;__Lib_Conversions.c,204 :: 		
0x0298	0x0E01      	MOVLW       1
0x029A	0x6E29      	MOVWF       IntToStr_negative_L0 
0x029C	0x0E00      	MOVLW       0
0x029E	0x6E2A      	MOVWF       IntToStr_negative_L0+1 
;__Lib_Conversions.c,205 :: 		
0x02A0	0x5023      	MOVF        FARG_IntToStr_input, 0 
0x02A2	0x0800      	SUBLW       0
0x02A4	0x6E2B      	MOVWF       IntToStr_inword_L0 
0x02A6	0xF02CC024  	MOVFF       FARG_IntToStr_input+1, IntToStr_inword_L0+1
0x02AA	0x0E00      	MOVLW       0
0x02AC	0x562C      	SUBFWB      IntToStr_inword_L0+1, 1 
;__Lib_Conversions.c,206 :: 		
L_IntToStr37:
;__Lib_Conversions.c,207 :: 		
0x02AE	0xF02DC02B  	MOVFF       IntToStr_inword_L0, FARG_WordToStr_input
0x02B2	0xF02EC02C  	MOVFF       IntToStr_inword_L0+1, FARG_WordToStr_input+1
0x02B6	0xF02FC025  	MOVFF       FARG_IntToStr_output, FARG_WordToStr_output
0x02BA	0xF030C026  	MOVFF       FARG_IntToStr_output+1, FARG_WordToStr_output+1
0x02BE	0xDF25      	RCALL       _WordToStr
;__Lib_Conversions.c,209 :: 		
0x02C0	0x0E06      	MOVLW       6
0x02C2	0x6E27      	MOVWF       IntToStr_i_L0 
0x02C4	0x0E00      	MOVLW       0
0x02C6	0x6E28      	MOVWF       IntToStr_i_L0+1 
;__Lib_Conversions.c,210 :: 		
L_IntToStr38:
0x02C8	0x0E00      	MOVLW       0
0x02CA	0x6E00      	MOVWF       R0 
0x02CC	0x5028      	MOVF        IntToStr_i_L0+1, 0 
0x02CE	0x5C00      	SUBWF       R0, 0 
0x02D0	0xE102      	BNZ         L__IntToStr168
0x02D2	0x5027      	MOVF        IntToStr_i_L0, 0 
0x02D4	0x0800      	SUBLW       0
L__IntToStr168:
0x02D6	0xE219      	BC          L_IntToStr39
;__Lib_Conversions.c,211 :: 		
0x02D8	0x5027      	MOVF        IntToStr_i_L0, 0 
0x02DA	0x2425      	ADDWF       FARG_IntToStr_output, 0 
0x02DC	0x6EE1      	MOVWF       FSR1L 
0x02DE	0x5028      	MOVF        IntToStr_i_L0+1, 0 
0x02E0	0x2026      	ADDWFC      FARG_IntToStr_output+1, 0 
0x02E2	0x6EE2      	MOVWF       FSR1H 
0x02E4	0x0E01      	MOVLW       1
0x02E6	0x5C27      	SUBWF       IntToStr_i_L0, 0 
0x02E8	0x6E00      	MOVWF       R0 
0x02EA	0x0E00      	MOVLW       0
0x02EC	0x5828      	SUBWFB      IntToStr_i_L0+1, 0 
0x02EE	0x6E01      	MOVWF       R1 
0x02F0	0x5000      	MOVF        R0, 0 
0x02F2	0x2425      	ADDWF       FARG_IntToStr_output, 0 
0x02F4	0x6EE9      	MOVWF       FSR0L 
0x02F6	0x5001      	MOVF        R1, 0 
0x02F8	0x2026      	ADDWFC      FARG_IntToStr_output+1, 0 
0x02FA	0x6EEA      	MOVWF       FSR0H 
0x02FC	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
;__Lib_Conversions.c,212 :: 		
0x0300	0x0E01      	MOVLW       1
0x0302	0x5E27      	SUBWF       IntToStr_i_L0, 1 
0x0304	0x0E00      	MOVLW       0
0x0306	0x5A28      	SUBWFB      IntToStr_i_L0+1, 1 
;__Lib_Conversions.c,213 :: 		
0x0308	0xD7DF      	BRA         L_IntToStr38
L_IntToStr39:
;__Lib_Conversions.c,214 :: 		
0x030A	0xFFE1C025  	MOVFF       FARG_IntToStr_output, FSR1L
0x030E	0xFFE2C026  	MOVFF       FARG_IntToStr_output+1, FSR1H
0x0312	0x0E20      	MOVLW       32
0x0314	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,215 :: 		
0x0316	0x5029      	MOVF        IntToStr_negative_L0, 0 
0x0318	0x102A      	IORWF       IntToStr_negative_L0+1, 0 
0x031A	0xE01A      	BZ          L_IntToStr40
;__Lib_Conversions.c,216 :: 		
0x031C	0x6A27      	CLRF        IntToStr_i_L0 
0x031E	0x6A28      	CLRF        IntToStr_i_L0+1 
;__Lib_Conversions.c,217 :: 		
L_IntToStr41:
0x0320	0x5027      	MOVF        IntToStr_i_L0, 0 
0x0322	0x2425      	ADDWF       FARG_IntToStr_output, 0 
0x0324	0x6EE9      	MOVWF       FSR0L 
0x0326	0x5028      	MOVF        IntToStr_i_L0+1, 0 
0x0328	0x2026      	ADDWFC      FARG_IntToStr_output+1, 0 
0x032A	0x6EEA      	MOVWF       FSR0H 
0x032C	0x50EE      	MOVF        POSTINC0, 0 
0x032E	0x0A20      	XORLW       32
0x0330	0xE103      	BNZ         L_IntToStr42
0x0332	0x4A27      	INFSNZ      IntToStr_i_L0, 1 
0x0334	0x2A28      	INCF        IntToStr_i_L0+1, 1 
0x0336	0xD7F4      	BRA         L_IntToStr41
L_IntToStr42:
;__Lib_Conversions.c,218 :: 		
0x0338	0x0E01      	MOVLW       1
0x033A	0x5E27      	SUBWF       IntToStr_i_L0, 1 
0x033C	0x0E00      	MOVLW       0
0x033E	0x5A28      	SUBWFB      IntToStr_i_L0+1, 1 
;__Lib_Conversions.c,219 :: 		
0x0340	0x5027      	MOVF        IntToStr_i_L0, 0 
0x0342	0x2425      	ADDWF       FARG_IntToStr_output, 0 
0x0344	0x6EE1      	MOVWF       FSR1L 
0x0346	0x5028      	MOVF        IntToStr_i_L0+1, 0 
0x0348	0x2026      	ADDWFC      FARG_IntToStr_output+1, 0 
0x034A	0x6EE2      	MOVWF       FSR1H 
0x034C	0x0E2D      	MOVLW       45
0x034E	0x6EE6      	MOVWF       POSTINC1 
L_IntToStr40:
;__Lib_Conversions.c,220 :: 		
L_end_IntToStr:
0x0350	0x0012      	RETURN      0
; end of _IntToStr
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0352	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0354	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0358	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x035A	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x035C	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x035E	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x0360	0x0012      	RETURN      0
; end of ___CC2DW
_teste_button:
;choose_signal.c,132 :: 		void teste_button()
;choose_signal.c,134 :: 		if(b1 && !flagb1)  flagb1 = 0x01;
0x0362	0xAC81      	BTFSS       RB6_bit, BitPos(RB6_bit+0) 
0x0364	0xD002      	BRA         L_teste_button6
0x0366	0xA619      	BTFSS       _flagb1, BitPos(_flagb1+0) 
L__teste_button24:
0x0368	0x8619      	BSF         _flagb1, BitPos(_flagb1+0) 
L_teste_button6:
;choose_signal.c,135 :: 		if(b2 && !flagb2)  flagb2 = 0x01;
0x036A	0xAE81      	BTFSS       RB7_bit, BitPos(RB7_bit+0) 
0x036C	0xD002      	BRA         L_teste_button9
0x036E	0xA219      	BTFSS       _flagb2, BitPos(_flagb2+0) 
L__teste_button23:
0x0370	0x8219      	BSF         _flagb2, BitPos(_flagb2+0) 
L_teste_button9:
;choose_signal.c,137 :: 		if(!b1 && flagb1)
0x0372	0xBC81      	BTFSC       RB6_bit, BitPos(RB6_bit+0) 
0x0374	0xD00B      	BRA         L_teste_button12
0x0376	0xA619      	BTFSS       _flagb1, BitPos(_flagb1+0) 
0x0378	0xD009      	BRA         L_teste_button12
L__teste_button22:
;choose_signal.c,139 :: 		limpa_lcd = 0x01;
0x037A	0x8019      	BSF         _limpa_lcd, BitPos(_limpa_lcd+0) 
;choose_signal.c,140 :: 		flagb1 = 0x00;
0x037C	0x9619      	BCF         _flagb1, BitPos(_flagb1+0) 
;choose_signal.c,141 :: 		selector = 0x01;
0x037E	0x8081      	BSF         RB0_bit, BitPos(RB0_bit+0) 
;choose_signal.c,142 :: 		pos_selector++;
0x0380	0x2A17      	INCF        _pos_selector, 1 
;choose_signal.c,143 :: 		if(pos_selector >= 11) pos_selector = 1;
0x0382	0x0E0B      	MOVLW       11
0x0384	0x5C17      	SUBWF       _pos_selector, 0 
0x0386	0xE302      	BNC         L_teste_button13
0x0388	0x0E01      	MOVLW       1
0x038A	0x6E17      	MOVWF       _pos_selector 
L_teste_button13:
;choose_signal.c,144 :: 		}
L_teste_button12:
;choose_signal.c,146 :: 		if(!b2 && flagb2)
0x038C	0xBE81      	BTFSC       RB7_bit, BitPos(RB7_bit+0) 
0x038E	0xD015      	BRA         L_teste_button16
0x0390	0xA219      	BTFSS       _flagb2, BitPos(_flagb2+0) 
0x0392	0xD013      	BRA         L_teste_button16
L__teste_button21:
;choose_signal.c,150 :: 		limpa_lcd = 0x01;
0x0394	0x8019      	BSF         _limpa_lcd, BitPos(_limpa_lcd+0) 
;choose_signal.c,151 :: 		flagb2 = 0x00;
0x0396	0x9219      	BCF         _flagb2, BitPos(_flagb2+0) 
;choose_signal.c,152 :: 		selector = 0x01;
0x0398	0x8081      	BSF         RB0_bit, BitPos(RB0_bit+0) 
;choose_signal.c,153 :: 		pos_selector--;
0x039A	0x0617      	DECF        _pos_selector, 1 
;choose_signal.c,154 :: 		if(pos_selector <= 0) pos_selector = 10;
0x039C	0x5017      	MOVF        _pos_selector, 0 
0x039E	0x0800      	SUBLW       0
0x03A0	0xE302      	BNC         L_teste_button17
0x03A2	0x0E0A      	MOVLW       10
0x03A4	0x6E17      	MOVWF       _pos_selector 
L_teste_button17:
;choose_signal.c,155 :: 		reset_selector = 0x01;
0x03A6	0x8281      	BSF         RB1_bit, BitPos(RB1_bit+0) 
;choose_signal.c,156 :: 		reset_selector = 0x00;
0x03A8	0x9281      	BCF         RB1_bit, BitPos(RB1_bit+0) 
;choose_signal.c,157 :: 		for(i = 0 ; i != pos_selector ; i++)
0x03AA	0x6A01      	CLRF        R1 
L_teste_button18:
0x03AC	0x5001      	MOVF        R1, 0 
0x03AE	0x1817      	XORWF       _pos_selector, 0 
0x03B0	0xE004      	BZ          L_teste_button19
;choose_signal.c,159 :: 		selector = 0x01;
0x03B2	0x8081      	BSF         RB0_bit, BitPos(RB0_bit+0) 
;choose_signal.c,160 :: 		selector = 0x00;
0x03B4	0x9081      	BCF         RB0_bit, BitPos(RB0_bit+0) 
;choose_signal.c,157 :: 		for(i = 0 ; i != pos_selector ; i++)
0x03B6	0x2A01      	INCF        R1, 1 
;choose_signal.c,161 :: 		}
0x03B8	0xD7F9      	BRA         L_teste_button18
L_teste_button19:
;choose_signal.c,162 :: 		}
L_teste_button16:
;choose_signal.c,164 :: 		selector = 0x00;
0x03BA	0x9081      	BCF         RB0_bit, BitPos(RB0_bit+0) 
;choose_signal.c,166 :: 		}
L_end_teste_button:
0x03BC	0x0012      	RETURN      0
; end of _teste_button
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x03BE	0x9695      	BCF         LCD_EN_Direction, BitPos(LCD_EN_Direction+0) 
;__Lib_Lcd.c,87 :: 		
0x03C0	0x9495      	BCF         LCD_RS_Direction, BitPos(LCD_RS_Direction+0) 
;__Lib_Lcd.c,88 :: 		
0x03C2	0x9895      	BCF         LCD_D4_Direction, BitPos(LCD_D4_Direction+0) 
;__Lib_Lcd.c,89 :: 		
0x03C4	0x9A95      	BCF         LCD_D5_Direction, BitPos(LCD_D5_Direction+0) 
;__Lib_Lcd.c,90 :: 		
0x03C6	0x9C95      	BCF         LCD_D6_Direction, BitPos(LCD_D6_Direction+0) 
;__Lib_Lcd.c,91 :: 		
0x03C8	0x9E95      	BCF         LCD_D7_Direction, BitPos(LCD_D7_Direction+0) 
;__Lib_Lcd.c,93 :: 		
0x03CA	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,94 :: 		
0x03CC	0x9483      	BCF         LCD_RS, BitPos(LCD_RS+0) 
;__Lib_Lcd.c,95 :: 		
0x03CE	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,96 :: 		
0x03D0	0x9C83      	BCF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,97 :: 		
0x03D2	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,98 :: 		
0x03D4	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,100 :: 		
0x03D6	0xDE30      	RCALL       _Delay_5500us
;__Lib_Lcd.c,101 :: 		
0x03D8	0xDE2F      	RCALL       _Delay_5500us
;__Lib_Lcd.c,102 :: 		
0x03DA	0xDE2E      	RCALL       _Delay_5500us
;__Lib_Lcd.c,105 :: 		
0x03DC	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,106 :: 		
0x03DE	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,107 :: 		
0x03E0	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,108 :: 		
0x03E2	0xDE24      	RCALL       _Delay_1us
;__Lib_Lcd.c,109 :: 		
0x03E4	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,110 :: 		
0x03E6	0xDE28      	RCALL       _Delay_5500us
;__Lib_Lcd.c,112 :: 		
0x03E8	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,113 :: 		
0x03EA	0xDE20      	RCALL       _Delay_1us
;__Lib_Lcd.c,114 :: 		
0x03EC	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,115 :: 		
0x03EE	0xDE24      	RCALL       _Delay_5500us
;__Lib_Lcd.c,117 :: 		
0x03F0	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,118 :: 		
0x03F2	0xDE1C      	RCALL       _Delay_1us
;__Lib_Lcd.c,119 :: 		
0x03F4	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,120 :: 		
0x03F6	0xDE20      	RCALL       _Delay_5500us
;__Lib_Lcd.c,123 :: 		
0x03F8	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,124 :: 		
0x03FA	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,125 :: 		
0x03FC	0xDE17      	RCALL       _Delay_1us
;__Lib_Lcd.c,126 :: 		
0x03FE	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,127 :: 		
0x0400	0xDE1B      	RCALL       _Delay_5500us
;__Lib_Lcd.c,130 :: 		
0x0402	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,131 :: 		
0x0404	0xDE13      	RCALL       _Delay_1us
;__Lib_Lcd.c,132 :: 		
0x0406	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,134 :: 		
0x0408	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,135 :: 		
0x040A	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,136 :: 		
0x040C	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,137 :: 		
0x040E	0xDE0E      	RCALL       _Delay_1us
;__Lib_Lcd.c,138 :: 		
0x0410	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,139 :: 		
0x0412	0xDE12      	RCALL       _Delay_5500us
;__Lib_Lcd.c,142 :: 		
0x0414	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,143 :: 		
0x0416	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,144 :: 		
0x0418	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,145 :: 		
0x041A	0xDE08      	RCALL       _Delay_1us
;__Lib_Lcd.c,146 :: 		
0x041C	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,148 :: 		
0x041E	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,149 :: 		
0x0420	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,150 :: 		
0x0422	0xDE04      	RCALL       _Delay_1us
;__Lib_Lcd.c,151 :: 		
0x0424	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,152 :: 		
0x0426	0xDE08      	RCALL       _Delay_5500us
;__Lib_Lcd.c,155 :: 		
0x0428	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,156 :: 		
0x042A	0xDE00      	RCALL       _Delay_1us
;__Lib_Lcd.c,157 :: 		
0x042C	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,159 :: 		
0x042E	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,160 :: 		
0x0430	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,161 :: 		
0x0432	0xDDFC      	RCALL       _Delay_1us
;__Lib_Lcd.c,162 :: 		
0x0434	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,163 :: 		
0x0436	0xDE00      	RCALL       _Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x0438	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,167 :: 		
0x043A	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,168 :: 		
0x043C	0xDDF7      	RCALL       _Delay_1us
;__Lib_Lcd.c,169 :: 		
0x043E	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,171 :: 		
0x0440	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,172 :: 		
0x0442	0x8C83      	BSF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,173 :: 		
0x0444	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,174 :: 		
0x0446	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,175 :: 		
0x0448	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,176 :: 		
0x044A	0xDDF0      	RCALL       _Delay_1us
;__Lib_Lcd.c,177 :: 		
0x044C	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,179 :: 		
0x044E	0xDDF4      	RCALL       _Delay_5500us
;__Lib_Lcd.c,181 :: 		
0x0450	0x8419      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x0452	0x0012      	RETURN      0
; end of _Lcd_Init
_impressao:
;choose_signal.c,170 :: 		void impressao()
;choose_signal.c,172 :: 		Lcd_Chr(1,1,'J');
0x0454	0x0E01      	MOVLW       1
0x0456	0x6E23      	MOVWF       FARG_Lcd_Chr_row 
0x0458	0x0E01      	MOVLW       1
0x045A	0x6E24      	MOVWF       FARG_Lcd_Chr_column 
0x045C	0x0E4A      	MOVLW       74
0x045E	0x6E25      	MOVWF       FARG_Lcd_Chr_out_char 
0x0460	0xDEDF      	RCALL       _Lcd_Chr
;choose_signal.c,173 :: 		Lcd_Chr_Cp('C');
0x0462	0x0E43      	MOVLW       67
0x0464	0x6E2D      	MOVWF       FARG_Lcd_Chr_CP_out_char 
0x0466	0xDE99      	RCALL       _Lcd_Chr_CP
;choose_signal.c,174 :: 		Lcd_Chr_Cp(' ');
0x0468	0x0E20      	MOVLW       32
0x046A	0x6E2D      	MOVWF       FARG_Lcd_Chr_CP_out_char 
0x046C	0xDE96      	RCALL       _Lcd_Chr_CP
;choose_signal.c,175 :: 		Lcd_Chr_Cp('M');
0x046E	0x0E4D      	MOVLW       77
0x0470	0x6E2D      	MOVWF       FARG_Lcd_Chr_CP_out_char 
0x0472	0xDE93      	RCALL       _Lcd_Chr_CP
;choose_signal.c,176 :: 		Lcd_Chr_Cp('O');
0x0474	0x0E4F      	MOVLW       79
0x0476	0x6E2D      	MOVWF       FARG_Lcd_Chr_CP_out_char 
0x0478	0xDE90      	RCALL       _Lcd_Chr_CP
;choose_signal.c,177 :: 		Lcd_Chr_Cp('D');
0x047A	0x0E44      	MOVLW       68
0x047C	0x6E2D      	MOVWF       FARG_Lcd_Chr_CP_out_char 
0x047E	0xDE8D      	RCALL       _Lcd_Chr_CP
;choose_signal.c,178 :: 		Lcd_Chr_Cp('U');
0x0480	0x0E55      	MOVLW       85
0x0482	0x6E2D      	MOVWF       FARG_Lcd_Chr_CP_out_char 
0x0484	0xDE8A      	RCALL       _Lcd_Chr_CP
;choose_signal.c,179 :: 		Lcd_Chr_Cp('L');
0x0486	0x0E4C      	MOVLW       76
0x0488	0x6E2D      	MOVWF       FARG_Lcd_Chr_CP_out_char 
0x048A	0xDE87      	RCALL       _Lcd_Chr_CP
;choose_signal.c,180 :: 		Lcd_Chr_Cp('O');
0x048C	0x0E4F      	MOVLW       79
0x048E	0x6E2D      	MOVWF       FARG_Lcd_Chr_CP_out_char 
0x0490	0xDE84      	RCALL       _Lcd_Chr_CP
;choose_signal.c,181 :: 		Lcd_Chr_Cp('S');
0x0492	0x0E53      	MOVLW       83
0x0494	0x6E2D      	MOVWF       FARG_Lcd_Chr_CP_out_char 
0x0496	0xDE81      	RCALL       _Lcd_Chr_CP
;choose_signal.c,183 :: 		Lcd_Chr(2,1,'P');
0x0498	0x0E02      	MOVLW       2
0x049A	0x6E23      	MOVWF       FARG_Lcd_Chr_row 
0x049C	0x0E01      	MOVLW       1
0x049E	0x6E24      	MOVWF       FARG_Lcd_Chr_column 
0x04A0	0x0E50      	MOVLW       80
0x04A2	0x6E25      	MOVWF       FARG_Lcd_Chr_out_char 
0x04A4	0xDEBD      	RCALL       _Lcd_Chr
;choose_signal.c,184 :: 		Lcd_Chr_Cp('O');
0x04A6	0x0E4F      	MOVLW       79
0x04A8	0x6E2D      	MOVWF       FARG_Lcd_Chr_CP_out_char 
0x04AA	0xDE77      	RCALL       _Lcd_Chr_CP
;choose_signal.c,185 :: 		Lcd_Chr_Cp('S');
0x04AC	0x0E53      	MOVLW       83
0x04AE	0x6E2D      	MOVWF       FARG_Lcd_Chr_CP_out_char 
0x04B0	0xDE74      	RCALL       _Lcd_Chr_CP
;choose_signal.c,186 :: 		Lcd_Chr_Cp(':');
0x04B2	0x0E3A      	MOVLW       58
0x04B4	0x6E2D      	MOVWF       FARG_Lcd_Chr_CP_out_char 
0x04B6	0xDE71      	RCALL       _Lcd_Chr_CP
;choose_signal.c,188 :: 		IntToStr(pos_selector,txt);
0x04B8	0xF023C017  	MOVFF       _pos_selector, FARG_IntToStr_input
0x04BC	0x0E00      	MOVLW       0
0x04BE	0x6E24      	MOVWF       FARG_IntToStr_input+1 
0x04C0	0x0E1C      	MOVLW       _txt
0x04C2	0x6E25      	MOVWF       FARG_IntToStr_output 
0x04C4	0x0E00      	MOVLW       hi_addr(_txt)
0x04C6	0x6E26      	MOVWF       FARG_IntToStr_output+1 
0x04C8	0xDED8      	RCALL       _IntToStr
;choose_signal.c,189 :: 		Lcd_Out(2,6,txt);
0x04CA	0x0E02      	MOVLW       2
0x04CC	0x6E23      	MOVWF       FARG_Lcd_Out_row 
0x04CE	0x0E06      	MOVLW       6
0x04D0	0x6E24      	MOVWF       FARG_Lcd_Out_column 
0x04D2	0x0E1C      	MOVLW       _txt
0x04D4	0x6E25      	MOVWF       FARG_Lcd_Out_text 
0x04D6	0x0E00      	MOVLW       hi_addr(_txt)
0x04D8	0x6E26      	MOVWF       FARG_Lcd_Out_text+1 
0x04DA	0xDE65      	RCALL       _Lcd_Out
;choose_signal.c,191 :: 		}
L_end_impressao:
0x04DC	0x0012      	RETURN      0
; end of _impressao
_limpaLcd:
;choose_signal.c,121 :: 		void limpaLcd()
;choose_signal.c,123 :: 		if(limpa_lcd)
0x04DE	0xA019      	BTFSS       _limpa_lcd, BitPos(_limpa_lcd+0) 
0x04E0	0xD004      	BRA         L_limpaLcd3
;choose_signal.c,125 :: 		Lcd_Cmd(_LCD_CLEAR);
0x04E2	0x0E01      	MOVLW       1
0x04E4	0x6E34      	MOVWF       FARG_Lcd_Cmd_out_char 
0x04E6	0xDDD3      	RCALL       _Lcd_Cmd
;choose_signal.c,126 :: 		limpa_lcd = 0x00;
0x04E8	0x9019      	BCF         _limpa_lcd, BitPos(_limpa_lcd+0) 
;choose_signal.c,127 :: 		}
L_limpaLcd3:
;choose_signal.c,128 :: 		}
L_end_limpaLcd:
0x04EA	0x0012      	RETURN      0
; end of _limpaLcd
_main:
0x04EC	0x0E01      	MOVLW       1
0x04EE	0x6E17      	MOVWF       _pos_selector 
;choose_signal.c,54 :: 		void main()
;choose_signal.c,58 :: 		GIE_bit = 0x01;                             //Habilitando interrupções globais
0x04F0	0x8EF2      	BSF         GIE_bit, BitPos(GIE_bit+0) 
;choose_signal.c,59 :: 		PEIE_bit = 0x01;                            //Habilitando interrupções de periféricos
0x04F2	0x8CF2      	BSF         PEIE_bit, BitPos(PEIE_bit+0) 
;choose_signal.c,60 :: 		IPEN_bit = 0x01;                            //Habilitando interrupções HIGH e LOW
0x04F4	0x8ED0      	BSF         IPEN_bit, BitPos(IPEN_bit+0) 
;choose_signal.c,62 :: 		TRISD = 0x00;                               //Configura PORTD como saida
0x04F6	0x6A95      	CLRF        TRISD 
;choose_signal.c,63 :: 		TRISB = 0xF8;                               //Configura RB0:RB2 como saida, restante entrada
0x04F8	0x0EF8      	MOVLW       248
0x04FA	0x6E93      	MOVWF       TRISB 
;choose_signal.c,65 :: 		ADCON0 = 0x00;                              //Conversor A-D Desabilitado
0x04FC	0x6AC2      	CLRF        ADCON0 
;choose_signal.c,66 :: 		ADCON1 = 0x0F;                              //Configurando saída como Digitais
0x04FE	0x0E0F      	MOVLW       15
0x0500	0x6EC1      	MOVWF       ADCON1 
;choose_signal.c,70 :: 		flagb1 = 0x00;
0x0502	0x9619      	BCF         _flagb1, BitPos(_flagb1+0) 
;choose_signal.c,71 :: 		flagb2 = 0x00;
0x0504	0x9219      	BCF         _flagb2, BitPos(_flagb2+0) 
;choose_signal.c,72 :: 		limpa_lcd = 0x01;
0x0506	0x8019      	BSF         _limpa_lcd, BitPos(_limpa_lcd+0) 
;choose_signal.c,76 :: 		T0CON = 0b10001000;                         //Configurando TMR0
0x0508	0x0E88      	MOVLW       136
0x050A	0x6ED5      	MOVWF       T0CON 
;choose_signal.c,81 :: 		TMR0H = 0xB1;                               //Iniciando os contadores (45536)
0x050C	0x0EB1      	MOVLW       177
0x050E	0x6ED7      	MOVWF       TMR0H 
;choose_signal.c,82 :: 		TMR0L = 0xE0;                               //Iniciando os contadores (45536)
0x0510	0x0EE0      	MOVLW       224
0x0512	0x6ED6      	MOVWF       TMR0L 
;choose_signal.c,83 :: 		TMR0IF_bit = 0x00;                          //Limpando a flag de interrupção
0x0514	0x94F2      	BCF         TMR0IF_bit, BitPos(TMR0IF_bit+0) 
;choose_signal.c,84 :: 		TMR0IP_bit = 0x01;                          //Configurando como interrupção de alta prioridade
0x0516	0x84F1      	BSF         TMR0IP_bit, BitPos(TMR0IP_bit+0) 
;choose_signal.c,85 :: 		TMR0IE_bit = 0x01;                          //Habilita interrupção do TMR0
0x0518	0x8AF2      	BSF         TMR0IE_bit, BitPos(TMR0IE_bit+0) 
;choose_signal.c,89 :: 		Lcd_Init();                                 //Inicializa o LCD
0x051A	0xDF51      	RCALL       _Lcd_Init
;choose_signal.c,90 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);                   //Desabilita o curso do LCD
0x051C	0x0E0C      	MOVLW       12
0x051E	0x6E34      	MOVWF       FARG_Lcd_Cmd_out_char 
0x0520	0xDDB6      	RCALL       _Lcd_Cmd
;choose_signal.c,92 :: 		while(1)
L_main0:
;choose_signal.c,94 :: 		limpaLcd();
0x0522	0xDFDD      	RCALL       _limpaLcd
;choose_signal.c,95 :: 		impressao();
0x0524	0xDF97      	RCALL       _impressao
;choose_signal.c,96 :: 		}
0x0526	0xD7FD      	BRA         L_main0
;choose_signal.c,98 :: 		}//FINAL MAIN
L_end_main:
0x0528	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [36]    _interrupt
0x002C      [12]    _Delay_1us
0x0038      [22]    _Delay_5500us
0x004E      [10]    _Delay_50us
0x0058      [54]    _Div_16X16_U
0x008E     [124]    _Lcd_Cmd
0x010A     [144]    _WordToStr
0x019A      [12]    _Lcd_Chr_CP
0x01A6     [122]    _Lcd_Out
0x0220      [90]    _Lcd_Chr
0x027A     [216]    _IntToStr
0x0352      [16]    ___CC2DW
0x0362      [92]    _teste_button
0x03BE     [150]    _Lcd_Init
0x0454     [138]    _impressao
0x04DE      [14]    _limpaLcd
0x04EC      [62]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0001       [1]    teste_button_i_L1
0x0002       [2]    memcpy_dd_L0
0x0002       [1]    R2
0x0002       [2]    strlen_cp_L0
0x0002       [2]    memset_pp_L0
0x0002       [2]    memchr_s_L0
0x0003       [1]    R3
0x0003       [2]    Ltrim_original_L0
0x0003       [2]    memmove_tt_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    strncat_cp_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [1]    R4
0x0004       [2]    strcat_cp_L0
0x0005       [2]    memmove_ff_L0
0x0005       [1]    R5
0x0005       [2]    Ltrim_p_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0017       [1]    _pos_selector
0x0018       [1]    ___Low_saveBSR
0x0019       [0]    _flagb1
0x0019       [0]    _limpa_lcd
0x0019       [0]    __Lib_Lcd_cmd_status
0x0019       [0]    _flagb2
0x001A       [1]    ___Low_saveWREG
0x001B       [1]    ___Low_saveSTATUS
0x001C       [7]    _txt
0x0023       [1]    FARG_Lcd_Out_row
0x0023       [1]    FARG_Lcd_Chr_row
0x0023       [2]    FARG_IntToStr_input
0x0024       [1]    FARG_Lcd_Out_column
0x0024       [1]    FARG_Lcd_Chr_column
0x0025       [1]    FARG_Lcd_Chr_out_char
0x0025       [2]    FARG_IntToStr_output
0x0025       [2]    FARG_Lcd_Out_text
0x0027       [2]    IntToStr_i_L0
0x0027       [1]    Lcd_Out_i_L0
0x0029       [2]    IntToStr_negative_L0
0x002B       [2]    IntToStr_inword_L0
0x002D       [2]    FARG_WordToStr_input
0x002D       [1]    FARG_Lcd_Chr_CP_out_char
0x002F       [2]    FARG_WordToStr_output
0x0031       [1]    WordToStr_len_L0
0x0032       [2]    FLOC__WordToStr
0x0034       [1]    FARG_Lcd_Cmd_out_char
0x0F81       [0]    RB1_bit
0x0F81       [0]    RB0_bit
0x0F81       [0]    RB7_bit
0x0F81       [0]    RB6_bit
0x0F83       [0]    RD2_bit
0x0F83       [0]    RD3_bit
0x0F83       [0]    RD0_bit
0x0F83       [0]    RD5_bit
0x0F83       [0]    RD4_bit
0x0F83       [0]    RD7_bit
0x0F83       [0]    RD6_bit
0x0F83       [0]    LCD_D6
0x0F83       [0]    LCD_D7
0x0F83       [0]    LCD_D5
0x0F83       [0]    LCD_RS
0x0F83       [0]    LCD_EN
0x0F83       [0]    LCD_D4
0x0F93       [1]    TRISB
0x0F95       [0]    LCD_D5_Direction
0x0F95       [0]    TRISD7_bit
0x0F95       [0]    LCD_D7_Direction
0x0F95       [0]    LCD_D6_Direction
0x0F95       [1]    TRISD
0x0F95       [0]    LCD_EN_Direction
0x0F95       [0]    TRISD3_bit
0x0F95       [0]    TRISD2_bit
0x0F95       [0]    TRISD4_bit
0x0F95       [0]    LCD_RS_Direction
0x0F95       [0]    TRISD5_bit
0x0F95       [0]    LCD_D4_Direction
0x0F95       [0]    TRISD6_bit
0x0FC1       [1]    ADCON1
0x0FC2       [1]    ADCON0
0x0FD0       [0]    IPEN_bit
0x0FD5       [1]    T0CON
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF1       [0]    TMR0IP_bit
0x0FF2       [0]    PEIE_bit
0x0FF2       [0]    GIE_bit
0x0FF2       [0]    TMR0IF_bit
0x0FF2       [0]    TMR0IE_bit
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
